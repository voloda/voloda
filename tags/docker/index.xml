<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on My personal notes on various topics</title>
    <link>http://voloda.bazilisek.net/tags/docker/</link>
    <description>Recent content in Docker on My personal notes on various topics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 25 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://voloda.bazilisek.net/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jenkinsfile Sample Utilizing Docker Slave Agent</title>
      <link>http://voloda.bazilisek.net/2017/10/jenkinsfile-sample-utilizing-docker-slave-agent/</link>
      <pubDate>Wed, 25 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://voloda.bazilisek.net/2017/10/jenkinsfile-sample-utilizing-docker-slave-agent/</guid>
      <description>pipeline { agent none environment { RELEASE_NUMBER = &#39;17.1.1&#39; VERSION_NUMBER = VersionNumber(versionNumberString: &#39;17.1.1.${BUILDS_ALL_TIME}&#39;) } stages { stage(&#39;Checkout from GIT&#39;){ agent any steps { script { currentBuild.displayName = &amp;quot;#${VERSION_NUMBER}&amp;quot; } checkout scm } } stage(&#39;NUGET package restore&#39;) { agent { label &#39;nuget&#39; } steps { echo &#39;Restoring nuget packages&#39; bat &#39;&amp;quot;%NUGET_PATH%&amp;quot; restore TestSolution.sln&#39; dir (&#39;.&#39;) { stash &#39;sources&#39; } } } stage(&#39;Build&#39;) { agent { label &#39;dotNET_4.7&#39;} steps { dir (&#39;.&#39;) { unstash &#39;sources&#39; } bat &amp;quot;\&amp;quot;${tool name: &#39;Default&#39;, type: &#39;msbuild&#39;}\\msbuild.</description>
    </item>
    
    <item>
      <title>Jenkins Server Setup On Windows</title>
      <link>http://voloda.bazilisek.net/2017/10/jenkins-server-setup-on-windows/</link>
      <pubDate>Tue, 17 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://voloda.bazilisek.net/2017/10/jenkins-server-setup-on-windows/</guid>
      <description>Jenkinks server setup Server setup  See http://jenkinks.io/download Open http://localhost:8080/  Slave setup  Install Chocolatey (see instructions on web) Install Google Chrome  choco install -y googlechrome  Install Java  choco install -y javaruntime  Install git  choco install -y git /NoShellIntegration  VS2017 build Tools  choco install -y visualstudio2017buildtools  Installing packages after the service start may require service restart Login to master via Chrome Configure Global Security and setup TCP port for JNLP agents Add new Node 17 Download the java file and run it  In menu it allows to Install Windows Service This may need to change the Jenkinks server URL in settings  Setup labels to distribute load across nodes conditionally  Tools  Chrome  https://dl.</description>
    </item>
    
    <item>
      <title>Jenkins Docker Slave Windows Build Agent</title>
      <link>http://voloda.bazilisek.net/2017/10/jenkins-docker-slave-windows-build-agent/</link>
      <pubDate>Sun, 15 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://voloda.bazilisek.net/2017/10/jenkins-docker-slave-windows-build-agent/</guid>
      <description>Jenkins docker slave  Use Yet Another Docker Plugin  Docker Plugin doesn&amp;rsquo;t work  Install JAVA into docker image and make it available on PATH In Configuration add Yet Another Docker Plugin as a cloud  Point it to Docker server Test that it is available Add the docker image Add label which can be references from builds  Jenkins now automatically creates a docker container  It does not require any additional changes  For local images make sure that the Pull option is set to Never  Sample Dockerfile FROM microsoft/windowsservercore SHELL [&amp;quot;powershell.</description>
    </item>
    
  </channel>
</rss>