<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on My personal notes on various topics</title>
    <link>http://voloda.bazilisek.net/categories/notes/</link>
    <description>Recent content in Notes on My personal notes on various topics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 Nov 2017 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="http://voloda.bazilisek.net/categories/notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jenkins Docker Slave Windows Build Agent</title>
      <link>http://voloda.bazilisek.net/2017/11/jenkins-docker-slave-windows-build-agent/</link>
      <pubDate>Sun, 19 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>http://voloda.bazilisek.net/2017/11/jenkins-docker-slave-windows-build-agent/</guid>
      <description>

&lt;h1 id=&#34;jenkins-docker-slave&#34;&gt;Jenkins docker slave&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;Yet Another Docker Plugin&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;With this plugin it just works (Docker Plugin doesn&amp;rsquo;t work)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Install JAVA into docker image and make it available on PATH&lt;/li&gt;
&lt;li&gt;In Configuration add &lt;code&gt;Yet Another Docker Plugin&lt;/code&gt; as a &lt;code&gt;Cloud&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Point it to &lt;code&gt;Docker server&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Test that it is available&lt;/li&gt;
&lt;li&gt;Add the docker image&lt;/li&gt;
&lt;li&gt;Add label which can be references from builds&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Jenkins now automatically creates a docker container as a build is executed

&lt;ul&gt;
&lt;li&gt;It does not require any additional changes&lt;/li&gt;
&lt;li&gt;It properly handles the operating system (Windows)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;For local only images make sure that the &lt;code&gt;Pull&lt;/code&gt; option is set to &lt;code&gt;Never&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;base-dockerfile&#34;&gt;Base Dockerfile&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;This &lt;code&gt;Dockerfile&lt;/code&gt; creates the base image for Windows build agent&lt;/li&gt;
&lt;li&gt;The only requirements is that &lt;code&gt;java.exe&lt;/code&gt; must be accessible in path.

&lt;ul&gt;
&lt;li&gt;It could be perhaps even installed using &lt;code&gt;Chocolatey&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;FROM microsoft/windowsservercore

SHELL [&amp;quot;powershell.exe&amp;quot;, &amp;quot;-ExecutionPolicy&amp;quot;, &amp;quot;Bypass&amp;quot;, &amp;quot;-Command&amp;quot;]

RUN iex ((New-Object System.Net.WebClient).DownloadString(&#39;https://chocolatey.org/install.ps1&#39;))
RUN choco install -y git --params=&#39;/NoShellIntegration&#39;
RUN choco install -y nuget.commandline

ENV JAVA_HOME c:\\jre1.8.0_91
ENV JENKINS_HOME c:\\jenkins

RUN (new-object System.Net.WebClient).Downloadfile(&#39;http://javadl.oracle.com/webapps/download/AutoDL?BundleId=210185&#39;, &#39;C:\jre-8u91-windows-x64.exe&#39;)
RUN start-process -filepath C:\\jre-8u91-windows-x64.exe -passthru -wait -argumentlist &amp;quot;/s,INSTALLDIR=$env:JAVA_HOME,/L,install64.log&amp;quot;
RUN del C:\jre-8u91-windows-x64.exe

RUN $env:PATH = $env:JAVA_HOME + &#39;\\bin;&#39; + $env:PATH; \
    [Environment]::SetEnvironmentVariable(&#39;PATH&#39;, $env:PATH, [EnvironmentVariableTarget]::Machine);

RUN mkdir $env:JENKINS_HOME
WORKDIR $JENKINS_HOME

ENTRYPOINT [&amp;quot;cmd.exe&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Jenkins Server Setup On Windows</title>
      <link>http://voloda.bazilisek.net/2017/10/jenkins-server-setup-on-windows/</link>
      <pubDate>Tue, 17 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://voloda.bazilisek.net/2017/10/jenkins-server-setup-on-windows/</guid>
      <description>

&lt;h1 id=&#34;operating-system-preparation&#34;&gt;Operating system preparation&lt;/h1&gt;

&lt;p&gt;These notes assume since beginning separation of the &lt;strong&gt;Jenkins server&lt;/strong&gt; and
individual build agents so on the server will not be any build utilities
except &lt;strong&gt;git&lt;/strong&gt; which is necessary for repository polling.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install &lt;strong&gt;Chocolatey&lt;/strong&gt; (see instructions on web).&lt;/li&gt;
&lt;li&gt;Install &lt;strong&gt;Google Chrome&lt;/strong&gt; (using Chocolatey is actually much easier than trying
to download it from web).

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;choco install -y googlechrome&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Install &lt;strong&gt;git&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;choco install -y git /NoShellIntegration&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;jenkins-server-setup&#34;&gt;Jenkins Server Setup&lt;/h1&gt;

&lt;p&gt;This is fairly simple:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;See &lt;a href=&#34;http://jenkinks.io/download&#34;&gt;http://jenkinks.io/download&lt;/a&gt; to get installation package.&lt;/li&gt;
&lt;li&gt;Open &lt;a href=&#34;http://localhost:8080/&#34;&gt;http://localhost:8080/&lt;/a&gt; in Chrome and follow instructions.&lt;/li&gt;
&lt;li&gt;Setup firewall rules to make the server accessible as needed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;useful-plugins&#34;&gt;Useful plugins&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Yet Another Docker plugins

&lt;ul&gt;
&lt;li&gt;Automatic spawning of docker build agents based on label&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;NUnit plugin

&lt;ul&gt;
&lt;li&gt;Parsing of NUnit results&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Blue Ocean plugin

&lt;ul&gt;
&lt;li&gt;Newer Jenkins UI for build pipelines&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;MSBuild Plugin

&lt;ul&gt;
&lt;li&gt;Allows to configure MSBuild as a tool and reference it from scripts&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Role-based authorization strategy

&lt;ul&gt;
&lt;li&gt;Allows role based access Configuration&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;windows-slave-setup&#34;&gt;Windows Slave Setup&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Install Chocolatey (see instructions on web)&lt;/li&gt;
&lt;li&gt;Install Google Chrome

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;choco install -y googlechrome&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Install Java

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;choco install -y javaruntime&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Install git

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;choco install -y git /NoShellIntegration&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;VS2017 build Tools

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;choco install -y visualstudio2017buildtools&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Install Nuget

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;choco install -y nuget.commandline&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Installing packages after the service start may require service restart&lt;/li&gt;
&lt;li&gt;Login to &lt;strong&gt;Jenkins master&lt;/strong&gt; via Chrome&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Configure Global Security&lt;/code&gt; and setup &lt;code&gt;TCP port for JNLP agents&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add new Node&lt;/li&gt;
&lt;li&gt;Download the java file and run it

&lt;ul&gt;
&lt;li&gt;In menu it allows to &lt;code&gt;Install Windows Service&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;This may need to change the Jenkins server URL in settings&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Setup labels to distribute load across nodes conditionally&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;links&#34;&gt;Links&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://chocolatey.org&#34;&gt;Chocolatey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Chocolatey setup on DEV machine &#43; useful packages</title>
      <link>http://voloda.bazilisek.net/notes/chocolatey/setup-on-dev-machine-and-useful-packages/</link>
      <pubDate>Wed, 04 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://voloda.bazilisek.net/notes/chocolatey/setup-on-dev-machine-and-useful-packages/</guid>
      <description>

&lt;h2 id=&#34;upgrade-all-packages&#34;&gt;Upgrade all packages&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;choco outdated&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;List available upgrades&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cup all -y&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;list-local-packages&#34;&gt;List local Packages&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;chocolatey list -localonly&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;packages&#34;&gt;Packages&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;choco install -y git --params=&#39;/NoShellIntegration&#39;
choco install -y poshgit
choco install -y gittfs
choco install -y far
choco install -y atom
choco install -y chefdk
choco install -y winmerge
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
